{"version":3,"file":"index.js","sources":["../src/components/ToolbarButton.tsx","../src/utils.ts","../src/components/Toolbar.tsx","../src/components/Link.tsx","../src/components/Media.tsx","../src/components/Blockquote.tsx","../src/components/CodeBlock.tsx","../src/components/UrlPopover.tsx","../src/components/Autocomplete.tsx","../src/MUIRichTextEditor.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport { TToolbarComponentProps, TToolbarButtonSize } from './Toolbar'\n\ninterface IToolbarButtonProps {\n    id?: string\n    editorId?: string\n    label: string\n    style: string\n    type: string\n    active?: boolean\n    icon?: JSX.Element\n    onClick?: any\n    inlineMode?: boolean\n    disabled?: boolean\n    size?: TToolbarButtonSize\n    component?: FunctionComponent<TToolbarComponentProps>\n}\n\nconst ToolbarButton: FunctionComponent<IToolbarButtonProps> = (props) => {\n    const size = !props.inlineMode ? (props.size || \"medium\") : \"small\"\n    const toolbarId = props.inlineMode ? \"-toolbar\" : \"\"\n    const editorId = props.editorId || \"mui-rte\"\n    const elemId = editorId + \"-\" + (props.id || props.label) + \"-button\" + toolbarId\n    const sharedProps = {\n        id: elemId,\n        onMouseDown: (e: React.MouseEvent) => {\n            e.preventDefault()\n            if (props.onClick) {\n                props.onClick(props.style, props.type, elemId, props.inlineMode)\n            }\n        },\n        disabled: props.disabled || false\n    }\n    if (props.icon) {\n        return (\n            <IconButton\n                {...sharedProps}\n                aria-label={props.label}\n                color={props.active ? \"primary\" : \"default\"}\n                size={size}\n            >\n                {props.icon}\n            </IconButton>\n        )\n    }\n    if (props.component) {\n        return (\n            <props.component \n                {...sharedProps}\n                active={props.active || false}\n            />\n        )\n    }\n    return null\n}\n\nexport default ToolbarButton","import { EditorState, DraftBlockType, ContentBlock, ContentState, \n    Modifier, SelectionState, getVisibleSelectionRect, DraftStyleMap } from 'draft-js'\nimport Immutable from 'immutable'\nimport { TCustomControl } from './components/Toolbar'\n\nexport type TSelectionInfo = {\n    inlineStyle: Immutable.OrderedSet<string>,\n    blockType: DraftBlockType,\n    entityType: string,\n    linkKey: string\n    block: ContentBlock\n}\n\n/**\n * Get the current selection details\n */\nconst getSelectionInfo = (editorState: EditorState): TSelectionInfo => {\n    const selection = editorState.getSelection()\n    const startOffset = selection.getStartOffset()\n    const currentContent = editorState.getCurrentContent()\n    const contentBlock = currentContent.getBlockForKey(selection.getStartKey())\n    const currentStyle = editorState.getCurrentInlineStyle()\n    const linkKey = contentBlock.getEntityAt(startOffset)\n    let entityType = \"\"\n    if (linkKey) {\n        const linkInstance = currentContent.getEntity(linkKey)\n        entityType = linkInstance.getType()\n    }\n    return {\n        inlineStyle: currentStyle,\n        blockType: contentBlock.getType(),\n        entityType: entityType,\n        linkKey: linkKey,\n        block: contentBlock\n    }\n}\n\n/**\n * Remove a block from the ContentState\n */\nconst removeBlockFromMap = (editorState: EditorState, block: ContentBlock): ContentState => {\n    const contentState = editorState.getCurrentContent()\n    const removeBlockContentState = Modifier.removeRange(\n        contentState,\n        new SelectionState({\n            anchorKey: block.getKey(),\n            anchorOffset: 0,\n            focusKey: block.getKey(),\n            focusOffset: block.getLength(),\n        }),\n        'backward'\n    )\n    const blockMap = removeBlockContentState.getBlockMap().delete(block.getKey())\n    return removeBlockContentState.merge({\n        blockMap,\n        selectionAfter: contentState.getSelectionAfter()\n    }) as ContentState\n}\n\nconst atomicBlockExists = (name: string, controls?: TCustomControl[]) => {\n    if (!controls) {\n        return undefined\n    }\n    return controls.find(control => \n        control.type === \"atomic\" && \n        control.name === name && \n        control.atomicComponent !== undefined)\n}\n\nconst isGreaterThan = (value: number, maxValue?: number): boolean => {\n    if (!maxValue) {\n        return false\n    }\n    return value > maxValue\n}\n\nconst clearInlineStyles = (editorState: EditorState, customStyles?: DraftStyleMap): ContentState => {\n    let styles = ['BOLD', 'ITALIC', 'UNDERLINE']\n    if (customStyles) {\n        styles = styles.concat(Object.getOwnPropertyNames(customStyles))\n    }\n    return styles.reduce((newContentState: ContentState, style: string) => (\n        Modifier.removeInlineStyle(newContentState, editorState.getSelection(), style)\n    ), editorState.getCurrentContent())\n}\n\nconst getEditorBounds = (editor: HTMLElement) => {\n    return {\n        selectionRect: getVisibleSelectionRect(window),\n        editorRect: editor.getBoundingClientRect()\n    }\n}\n\nconst getLineNumber = (editorState: EditorState) => {\n    const currentBlockKey = editorState.getSelection().getStartKey()\n    return editorState.getCurrentContent().getBlockMap()\n        .keySeq().findIndex(k => k === currentBlockKey)\n}\n\nexport { getSelectionInfo, removeBlockFromMap, atomicBlockExists, isGreaterThan, clearInlineStyles, getEditorBounds, getLineNumber }\n","import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { EditorState } from 'draft-js'\nimport FormatBoldIcon from '@material-ui/icons/FormatBold'\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic'\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined'\nimport StrikethroughIcon from '@material-ui/icons/StrikethroughS'\nimport HighlightIcon from '@material-ui/icons/Highlight'\nimport TitleIcon from '@material-ui/icons/Title'\nimport InsertLinkIcon from '@material-ui/icons/InsertLink'\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary'\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered'\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted'\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote'\nimport CodeIcon from '@material-ui/icons/Code'\nimport FormatClearIcon from '@material-ui/icons/FormatClear'\nimport SaveIcon from '@material-ui/icons/Save'\nimport UndoIcon from '@material-ui/icons/Undo'\nimport RedoIcon from '@material-ui/icons/Redo'\nimport ToolbarButton from './ToolbarButton'\nimport { getSelectionInfo } from '../utils'\n\nexport type TToolbarControl =\n    \"title\" | \"bold\" | \"italic\" | \"underline\" | \"link\" | \"numberList\" |\n    \"bulletList\" | \"quote\" | \"code\" | \"clear\" | \"save\" | \"media\" |\n    \"strikethrough\" | \"highlight\" | string\n\nexport type TControlType = \"inline\" | \"block\" | \"callback\" | \"atomic\"\n\nexport type TToolbarButtonSize = \"small\" | \"medium\"\n\nexport type TToolbarComponentProps = {\n    id: string,\n    onMouseDown: (e: React.MouseEvent) => void,\n    active: boolean,\n    disabled: boolean\n}\n\nexport type TCustomControl = {\n    id?: string\n    name: string\n    icon?: JSX.Element\n    type: TControlType\n    component?: FunctionComponent<TToolbarComponentProps>\n    inlineStyle?: React.CSSProperties\n    blockWrapper?: React.ReactElement\n    atomicComponent?: FunctionComponent\n    onClick?: (editorState: EditorState, name: string, anchor: HTMLElement | null) => EditorState | void\n}\n\ntype TStyleType = {\n    id?: string\n    name: TToolbarControl | string\n    label: string\n    style: string\n    icon?: JSX.Element\n    component?: FunctionComponent<TToolbarComponentProps>\n    type: TControlType\n    active?: boolean\n    clickFnName?: string\n}\n\ntype TToolbarProps = {\n    id: string\n    editorState: EditorState\n    controls?: Array<TToolbarControl>\n    customControls?: TCustomControl[]\n    onClick: (style: string, type: string, id: string, inlineMode?: boolean) => void\n    inlineMode?: boolean\n    className?: string\n    disabled?: boolean\n    size?: TToolbarButtonSize\n    isActive: boolean\n}\n\nconst STYLE_TYPES: TStyleType[] = [\n    {\n        label: 'H2',\n        name: \"title\",\n        style: 'header-two',\n        icon: <TitleIcon />,\n        type: \"block\"\n    },\n    {\n        label: 'Bold',\n        name: \"bold\",\n        style: 'BOLD',\n        icon: <FormatBoldIcon />,\n        type: \"inline\"\n    },\n    {\n        label: 'Italic',\n        name: \"italic\",\n        style: 'ITALIC',\n        icon: <FormatItalicIcon />,\n        type: \"inline\"\n    },\n    {\n        label: 'Underline',\n        name: \"underline\",\n        style: 'UNDERLINE',\n        icon: <FormatUnderlinedIcon />,\n        type: \"inline\"\n    },\n    {\n        label: 'Strikethrough',\n        name: \"strikethrough\",\n        style: 'STRIKETHROUGH',\n        icon: <StrikethroughIcon />,\n        type: \"inline\"\n    },\n    {\n        label: 'Highlight',\n        name: \"highlight\",\n        style: 'HIGHLIGHT',\n        icon: <HighlightIcon />,\n        type: \"inline\"\n    },\n    {\n        label: 'Undo',\n        name: \"undo\",\n        style: \"UNDO\",\n        icon: <UndoIcon />,\n        type: \"callback\",\n    },\n    {\n        label: 'Redo',\n        name: \"redo\",\n        style: \"REDO\",\n        icon: <RedoIcon />,\n        type: \"callback\",\n    },\n    {\n        label: 'Link',\n        name: \"link\",\n        style: 'LINK',\n        icon: <InsertLinkIcon />,\n        type: \"callback\",\n        id: \"link-control\"\n    },\n    {\n        label: 'Media',\n        name: \"media\",\n        style: 'IMAGE',\n        icon: <PhotoLibraryIcon />,\n        type: \"callback\",\n        id: \"media-control\"\n    },\n    {\n        label: 'UL',\n        name: \"bulletList\",\n        style: 'unordered-list-item',\n        icon: <FormatListBulletedIcon />,\n        type: \"block\"\n    },\n    {\n        label: 'OL',\n        name: \"numberList\",\n        style: 'ordered-list-item',\n        icon: <FormatListNumberedIcon />,\n        type: \"block\"\n    },\n    {\n        label: 'Blockquote',\n        name: \"quote\",\n        style: 'blockquote',\n        icon: <FormatQuoteIcon />,\n        type: \"block\"\n    },\n    {\n        label: 'Code Block',\n        name: \"code\",\n        style: 'code-block',\n        icon: <CodeIcon />,\n        type: \"block\"\n    },\n    {\n        label: 'Clear',\n        name: \"clear\",\n        style: 'clear',\n        icon: <FormatClearIcon />,\n        type: \"callback\"\n    },\n    {\n        label: 'Save',\n        name: \"save\",\n        style: 'save',\n        icon: <SaveIcon />,\n        type: \"callback\"\n    }\n]\n\nconst Toolbar: FunctionComponent<TToolbarProps> = (props) => {\n    const [availableControls, setAvailableControls] = useState(props.controls ? [] : STYLE_TYPES)\n    const {editorState} = props\n    const id = props.inlineMode ? \"-inline-toolbar\" : \"-toolbar\"\n\n    useEffect(() => {\n        if (!props.controls) {\n            return\n        }\n        const filteredControls: TStyleType[] = []\n        const controls = props.controls.filter((control, index) => props.controls!.indexOf(control) >= index)\n        controls.forEach(name => {\n            const style = STYLE_TYPES.find(style => style.name === name)\n            if (style) {\n                filteredControls.push(style)\n            }\n            else if (props.customControls) {\n                const customControl = props.customControls.find(style => style.name === name)\n                if (customControl && customControl.type !== \"atomic\" && \n                    (customControl.icon || customControl.component)) {\n                    filteredControls.push({\n                        id: customControl.id || (customControl.name + \"Id\"),\n                        name: customControl.name,\n                        label: customControl.name,\n                        style: customControl.name.toUpperCase(),\n                        icon: customControl.icon,\n                        component: customControl.component,\n                        type: customControl.type,\n                        clickFnName: \"onCustomClick\"\n                    })\n                }\n            }\n        })\n        setAvailableControls(filteredControls)\n    }, [props.controls, props.customControls])\n\n    return (\n        <div id={`${props.id}${id}`} className={props.className}>\n            {availableControls.map(style => {\n                if (props.inlineMode && \n                    (style.type !== \"inline\" && (style.name !== \"link\" && style.name !== \"clear\"))) {\n                    return null\n                }\n                let active = false\n                const action = props.onClick\n                if (!props.isActive) {\n                    active = false\n                }\n                else if (style.type === \"inline\") {\n                    active = editorState.getCurrentInlineStyle().has(style.style)\n                }\n                else if (style.type === \"block\") {\n                    const selection = editorState.getSelection()\n                    const block = editorState.getCurrentContent().getBlockForKey(selection.getStartKey())\n                    if (block) { \n                        active = style.style === block.getType()\n                    }\n                }\n                else {\n                    if (style.style === \"IMAGE\" || style.style === \"LINK\") {\n                        active = style.style === getSelectionInfo(editorState).entityType\n                    }\n                }\n\n                return (\n                    <ToolbarButton\n                        id={style.id}\n                        editorId={props.id}\n                        key={`key-${style.label}`}\n                        active={active}\n                        label={style.label}\n                        onClick={action}\n                        style={style.style}\n                        type={style.type}\n                        icon={style.icon}\n                        component={style.component}\n                        inlineMode={props.inlineMode}\n                        disabled={props.disabled}\n                        size={props.size}\n                    />\n                )\n            })}\n        </div>\n    )\n}\nexport default Toolbar","import React, { FunctionComponent } from 'react'\nimport { ContentState } from 'draft-js'\nimport MuiLink from '@material-ui/core/Link'\n\ntype TLinkProps = {\n    children?: React.ReactNode\n    contentState: ContentState\n    entityKey: string\n}\n\nconst Link: FunctionComponent<TLinkProps> = (props) => {\n    const { url, className } = props.contentState.getEntity(props.entityKey).getData()\n    return (\n        <MuiLink \n            href={url} \n            className={`${className} editor-anchor`}\n            target=\"_blank\"\n        >\n            {props.children}\n        </MuiLink>\n    )\n}\n\nexport default Link","import React, { FunctionComponent } from 'react'\nimport classNames from 'classnames'\nimport { ContentState, ContentBlock } from 'draft-js'\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles'\n\ninterface IMediaProps extends WithStyles<typeof styles> {\n    block: ContentBlock\n    contentState: ContentState\n    blockProps: any\n    onClick: (block: ContentBlock) => void\n}\n\nconst styles = ({ shadows }: Theme) => createStyles({\n    root: {\n        margin: \"5px 0 1px\",\n        outline: \"none\"\n    },\n    editable: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            boxShadow: shadows[3]\n        }\n    },\n    focused: {\n        boxShadow: shadows[3]\n    },\n    centered: {\n        textAlign: \"center\"\n    },\n    leftAligned: {\n        textAlign: \"left\"\n    },\n    rightAligned: {\n        textAlign: \"right\"\n    }\n})\n\nconst Media: FunctionComponent<IMediaProps> = (props) => {\n    const { url, width, height, alignment, type } = props.contentState.getEntity(props.block.getEntityAt(0)).getData()\n    const { onClick, readOnly, focusKey } = props.blockProps\n\n    const htmlTag = () => {\n        const componentProps = {\n            src: url,\n            className: classNames(props.classes.root, {\n                [props.classes.editable]: !readOnly,\n                [props.classes.focused]: !readOnly && focusKey === props.block.getKey()\n            }),\n            width: width,\n            height: type === \"video\" ? \"auto\" : height,\n            onClick: () => {\n                if (readOnly) {\n                    return\n                }\n                onClick(props.block)\n            }\n        }\n\n        if (!type || type === \"image\") {\n            return <img {...componentProps} />\n        }\n        if (type === \"video\") {\n            return <video {...componentProps} autoPlay={false} controls />\n        }\n        return null\n    }\n\n    return (\n        <div className={classNames({\n            [props.classes.centered]: alignment === \"center\",\n            [props.classes.leftAligned]: alignment === \"left\",\n            [props.classes.rightAligned]: alignment === \"right\"\n        })}>\n            {htmlTag()}\n        </div>\n    )\n}\n\nexport default withStyles(styles, { withTheme: true })(Media)\n","import React, { FunctionComponent } from 'react'\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles'\n\nconst styles = ({ palette }: Theme) => createStyles({\n    root: {\n        fontStyle: \"italic\",\n        color: palette.grey[800],\n        borderLeft: `4px solid ${palette.grey.A100}`\n    }\n})\n\ninterface IBlockquoteProps extends WithStyles<typeof styles> {\n    children?: React.ReactNode\n}\n\nconst Blockquote: FunctionComponent<IBlockquoteProps> = (props) => {\n    return (\n        <div className={props.classes.root}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default withStyles(styles, { withTheme: true })(Blockquote)","import React, { FunctionComponent } from 'react'\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles'\n\nconst styles = ({ spacing, palette }: Theme) => createStyles({\n    root: {\n        backgroundColor: palette.grey[200],\n        padding: spacing(1, 2, 1, 2)\n    }\n})\n\ninterface IBlockquoteProps extends WithStyles<typeof styles> {\n    children?: React.ReactNode\n}\n\nconst CodeBlock: FunctionComponent<IBlockquoteProps> = (props) => {\n    return (\n        <div className={props.classes.root}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default withStyles(styles, { withTheme: true })(CodeBlock)","import React, { FunctionComponent, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Popover from '@material-ui/core/Popover'\nimport TextField from '@material-ui/core/TextField'\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto'\nimport MovieIcon from '@material-ui/icons/Movie'\nimport CheckIcon from '@material-ui/icons/Check'\nimport DeleteIcon from '@material-ui/icons/DeleteOutline'\nimport FormatAlignCenter from '@material-ui/icons/FormatAlignCenter'\nimport FormatAlignLeft from '@material-ui/icons/FormatAlignLeft'\nimport FormatAlignRight from '@material-ui/icons/FormatAlignRight'\n\nexport type TAlignment = \"left\" | \"center\" | \"right\"\n\nexport type TMediaType = \"image\" | \"video\"\n\nexport type TUrlData = {\n    url?: string\n    width?: number\n    height?: number\n    alignment?: TAlignment\n    type?: TMediaType\n}\n\ninterface IUrlPopoverStateProps extends WithStyles<typeof styles> {\n    anchor?: HTMLElement\n    data?: TUrlData\n    isMedia?: boolean\n    onConfirm: (isMedia?: boolean, ...args: any) => void\n}\n\nconst styles = ({ spacing }: Theme) => createStyles({\n    linkPopover: {\n        padding: spacing(2, 2, 2, 2),\n        maxWidth: 250\n    },\n    linkTextField: {\n        width: \"100%\"\n    }\n})\n\nconst UrlPopover: FunctionComponent<IUrlPopoverStateProps> = (props) => {\n    const [data, setData] = useState<TUrlData>(props.data || {\n        url: undefined,\n        width: undefined,\n        height: undefined,\n        alignment: undefined,\n        type: undefined\n    })\n\n    const { classes } = props\n\n    const onSizeChange = (value: any, prop: \"width\" | \"height\") => {\n        if (value === \"\") {\n            setData({ ...data, [prop]: undefined })\n            return\n        }\n        const intValue = parseInt(value, 10)\n        if (isNaN(intValue)) {\n            return\n        }\n        setData({ ...data, [prop]: intValue })\n    }\n\n    return (\n        <Popover\n            open={props.anchor !== undefined}\n            anchorEl={props.anchor}\n            anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\"\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n            }}\n        >\n            <div className={classes.linkPopover}>\n                <Grid container spacing={1}>\n                    <Grid container item xs spacing={1}>\n                        <Grid item xs={12}>\n                            <TextField\n                                className={classes.linkTextField}\n                                onChange={(event) => setData({...data, url: event.target.value})}\n                                label=\"URL\"\n                                defaultValue={props.data && props.data.url}\n                                autoFocus={true}\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                            />\n                        </Grid>\n                        {props.isMedia ?\n                            <>\n                                <Grid item xs={12}>\n                                    <ButtonGroup fullWidth>\n                                        <Button \n                                            color={(!data.type || data.type === \"image\") ? \"primary\" : \"default\"} \n                                            size=\"small\" \n                                            onClick={() => setData({...data, type: \"image\"})}\n                                        >\n                                            <InsertPhotoIcon />\n                                        </Button>\n                                        <Button \n                                            color={data.type === \"video\" ? \"primary\" : \"default\"} \n                                            size=\"small\" \n                                            onClick={() => setData({...data, type: \"video\"})}\n                                        >\n                                            <MovieIcon />\n                                        </Button>\n                                    </ButtonGroup>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <TextField\n                                        onChange={(event) => onSizeChange(event.target.value, \"width\")}\n                                        value={data.width || \"\"}\n                                        label=\"Width\"\n                                        InputLabelProps={{\n                                            shrink: true\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <TextField\n                                        onChange={(event) => onSizeChange(event.target.value, \"height\")}\n                                        value={data.height || \"\"}\n                                        label=\"Height\"\n                                        InputLabelProps={{\n                                            shrink: true\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <ButtonGroup fullWidth>\n                                        <Button \n                                            color={data.alignment === \"left\" ? \"primary\" : \"default\"} \n                                            size=\"small\" \n                                            onClick={() => setData({...data, alignment: \"left\"})}\n                                        >\n                                            <FormatAlignLeft />\n                                        </Button>\n                                        <Button \n                                            color={data.alignment === \"center\" ? \"primary\" : \"default\"} \n                                            size=\"small\" \n                                            onClick={() => setData({...data, alignment: \"center\"})}\n                                        >\n                                            <FormatAlignCenter />\n                                        </Button>\n                                        <Button \n                                            color={data.alignment === \"right\" ? \"primary\" : \"default\"} \n                                            size=\"small\" \n                                            onClick={() => setData({...data, alignment: \"right\"})}>\n                                            <FormatAlignRight />\n                                        </Button>\n                                    </ButtonGroup>\n                                </Grid>\n                            </>\n                            : null}\n                    </Grid>\n                    <Grid container item xs={12} direction=\"row\" justify=\"flex-end\">\n                        {props.data && props.data.url ?\n                        <Button\n                            onClick={() => props.onConfirm(props.isMedia, \"\")}\n                        >\n                            <DeleteIcon />\n                        </Button>\n                        : null }\n                        <Button\n                            onClick={() => props.onConfirm(props.isMedia, data.url, data.width, data.height, data.alignment, data.type)}\n                        >\n                            <CheckIcon />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </div>\n        </Popover>\n    )\n}\n\nexport default withStyles(styles, { withTheme: true })(UrlPopover)","import React, { FunctionComponent } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\n\nexport type TAutocompleteItem = {\n  keys: string[];\n  value: any;\n  content: string | JSX.Element;\n  data?: any;\n};\n\ninterface TAutocompleteProps extends WithStyles<typeof styles> {\n  items: TAutocompleteItem[];\n  top: number;\n  left: number;\n  selectedIndex: number;\n  onClick: (selectedIndex: number) => void;\n}\n\nconst styles = () =>\n  createStyles({\n    container: {\n      minWidth: \"200px\",\n      position: \"absolute\",\n      zIndex: 10,\n    },\n    item: {\n      cursor: \"pointer\",\n    },\n  });\n\nconst Autocomplete: FunctionComponent<TAutocompleteProps> = (props) => {\n  if (!props.items.length) {\n    return null;\n  }\n\n  const { classes } = props;\n  return (\n    <Paper\n      className={classes.container}\n      style={{\n        top: props.top,\n        left: props.left,\n      }}\n    >\n      <List dense={true}>\n        {props.items.map((item, index) => (\n          <ListItem\n            key={index}\n            className={classes.item}\n            selected={index === props.selectedIndex}\n            onClick={() => props.onClick(index)}\n          >\n            {item.content}\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles, { withTheme: true })(Autocomplete);\n","import React, {\n  FunctionComponent,\n  useEffect,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n  RefForwardingComponent,\n} from \"react\";\nimport Immutable from \"immutable\";\nimport classNames from \"classnames\";\nimport {\n  createStyles,\n  withStyles,\n  WithStyles,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  Editor,\n  EditorState,\n  convertFromRaw,\n  RichUtils,\n  AtomicBlockUtils,\n  CompositeDecorator,\n  convertToRaw,\n  DefaultDraftBlockRenderMap,\n  DraftEditorCommand,\n  DraftHandleValue,\n  DraftStyleMap,\n  ContentBlock,\n  DraftDecorator,\n  SelectionState,\n  KeyBindingUtil,\n  getDefaultKeyBinding,\n  Modifier,\n  DraftBlockRenderMap,\n  ContentState,\n  convertFromHTML,\n} from \"draft-js\";\nimport Toolbar, {\n  TToolbarControl,\n  TCustomControl,\n  TToolbarButtonSize,\n} from \"./components/Toolbar\";\nimport Link from \"./components/Link\";\nimport Media from \"./components/Media\";\nimport Blockquote from \"./components/Blockquote\";\nimport CodeBlock from \"./components/CodeBlock\";\nimport UrlPopover, {\n  TAlignment,\n  TUrlData,\n  TMediaType,\n} from \"./components/UrlPopover\";\nimport Autocomplete, { TAutocompleteItem } from \"./components/Autocomplete\";\nimport {\n  getSelectionInfo,\n  removeBlockFromMap,\n  atomicBlockExists,\n  isGreaterThan,\n  clearInlineStyles,\n  getEditorBounds,\n  getLineNumber,\n} from \"./utils\";\nimport { stateToHTML } from \"draft-js-export-html\";\n\nexport type TDecorator = {\n  component: FunctionComponent;\n  regex: RegExp;\n  name?: string;\n};\n\nexport type TAutocompleteStrategy = {\n  triggerChar: string;\n  items: TAutocompleteItem[];\n  insertSpaceAfter?: boolean;\n  atomicBlockName?: string;\n  decoratorName?: string; // the decorator to use on inserting this autocomplete value\n};\n\nexport type TAutocomplete = {\n  strategies: TAutocompleteStrategy[];\n  suggestLimit?: number;\n};\n\nexport type TAsyncAtomicBlockResponse = {\n  data: any;\n};\n\nexport type TMUIRichTextEditorRef = {\n  focus: () => void;\n  save: () => void;\n  saveHtml: (options?: any) => void; // options are for saveToHTML options\n  /**\n   * @deprecated Use `insertAtomicBlockSync` instead.\n   */\n  insertAtomicBlock: (name: string, data: any) => void;\n  insertAtomicBlockSync: (name: string, data: any) => void;\n  insertAtomicBlockAsync: (\n    name: string,\n    promise: Promise<TAsyncAtomicBlockResponse>,\n    placeholder?: string\n  ) => void;\n};\n\nexport type TDraftEditorProps = {\n  spellCheck?: boolean;\n  stripPastedStyles?: boolean;\n  handleDroppedFiles?: (\n    selectionState: SelectionState,\n    files: Blob[]\n  ) => DraftHandleValue;\n};\n\nexport type TKeyCommand = {\n  key: number;\n  name: string;\n  callback: (state: EditorState) => EditorState;\n};\n\nexport type TMUIRichTextEditorProps = {\n  id?: string;\n  /**\n   * @deprecated Use `defaultValue` instead.\n   */\n  value?: any;\n  defaultValue?: any;\n  defaultValueHtml?: any;\n  label?: string;\n  readOnly?: boolean;\n  inheritFontSize?: boolean;\n  error?: boolean;\n  controls?: Array<TToolbarControl>;\n  customControls?: TCustomControl[];\n  decorators?: TDecorator[];\n  toolbar?: boolean;\n  toolbarButtonSize?: TToolbarButtonSize;\n  inlineToolbar?: boolean;\n  inlineToolbarControls?: Array<TToolbarControl>;\n  floatingToolbar?: boolean;\n  floatingToolbarPosition?: any; // added to styles - so use top, bottom, left, right\n  floatingToolbarControls?: Array<TToolbarControl>;\n  draftEditorProps?: TDraftEditorProps;\n  keyCommands?: TKeyCommand[];\n  maxLength?: number;\n  autocomplete?: TAutocomplete;\n  onSave?: (data: string) => void;\n  onSaveHtml?: (data: string) => void;\n  onChange?: (state: EditorState) => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  autocompleteItemsGenerator?: (\n    searchTerm: string,\n    triggerChar: any\n  ) => TAutocompleteItem[]; // function to generate autocomplete items\n};\n\ninterface IMUIRichTextEditorProps\n  extends TMUIRichTextEditorProps,\n    WithStyles<typeof styles> {}\n\ntype TMUIRichTextEditorState = {\n  anchorUrlPopover?: HTMLElement;\n  urlKey?: string;\n  urlData?: TUrlData;\n  urlIsMedia?: boolean;\n  toolbarPosition?: TPosition;\n};\n\ntype TStateOffset = {\n  start: number;\n  end: number;\n};\n\ntype TPosition = {\n  top: number;\n  left: number;\n};\n\nconst styles = ({ spacing, typography, palette }: Theme) =>\n  createStyles({\n    root: {},\n    container: {\n      margin: spacing(1, 0, 0, 0),\n      position: \"relative\",\n      fontFamily: typography.body1.fontFamily,\n      fontSize: typography.body1.fontSize,\n      \"& figure\": {\n        margin: 0,\n      },\n    },\n    inheritFontSize: {\n      fontSize: \"inherit\",\n    },\n    editor: {},\n    editorContainer: {\n      margin: spacing(1, 0, 0, 0),\n      cursor: \"text\",\n      width: \"100%\",\n      padding: spacing(0, 0, 1, 0),\n    },\n    editorReadOnly: {\n      borderBottom: \"none\",\n    },\n    error: {\n      borderBottom: \"2px solid red\",\n    },\n    hidePlaceholder: {\n      display: \"none\",\n    },\n    placeHolder: {\n      color: palette.grey[600],\n      position: \"absolute\",\n      outline: \"none\",\n    },\n    linkPopover: {\n      padding: spacing(2, 2, 2, 2),\n    },\n    linkTextField: {\n      width: \"100%\",\n    },\n    anchorLink: {},\n    toolbar: {},\n    floatingToolbar: {\n      position: \"fixed\",\n      paddingTop: \"6px\",\n      paddingBottom: \"6px\",\n      \"& button\": {\n        marginLeft: 4,\n        marginRight: 4,\n      },\n      zIndex: 9999,\n    },\n    inlineToolbar: {\n      maxWidth: \"180px\",\n      position: \"absolute\",\n      padding: \"5px\",\n      zIndex: 10,\n    },\n  });\n\nconst blockRenderMap = Immutable.Map({\n  blockquote: {\n    element: \"blockquote\",\n    wrapper: <Blockquote />,\n  },\n  \"code-block\": {\n    element: \"pre\",\n    wrapper: <CodeBlock />,\n  },\n});\nconst styleRenderMap: DraftStyleMap = {\n  STRIKETHROUGH: {\n    textDecoration: \"line-through\",\n  },\n  HIGHLIGHT: {\n    backgroundColor: \"yellow\",\n  },\n};\n\nconst { hasCommandModifier } = KeyBindingUtil;\nconst autocompleteMinSearchCharCount = 2;\nconst lineHeight = 26;\nconst defaultInlineToolbarControls = [\"bold\", \"italic\", \"underline\", \"clear\"];\n\nconst findLinkEntities = (\n  contentBlock: any,\n  callback: any,\n  contentState: any\n) => {\n  contentBlock.findEntityRanges((character: any) => {\n    const entityKey = character.getEntity();\n    return (\n      entityKey !== null &&\n      contentState.getEntity(entityKey).getType() === \"LINK\"\n    );\n  }, callback);\n};\n\nconst findDecoWithRegex = (regex: RegExp, contentBlock: any, callback: any) => {\n  const text = contentBlock.getText();\n  let matchArr, start;\n  while ((matchArr = regex.exec(text)) !== null) {\n    start = matchArr.index;\n    callback(start, start + matchArr[0].length);\n  }\n};\n\nconst findDecoWithNameFromAutoComplete = (\n  name: any,\n  contentBlock: any,\n  callback: any,\n  contentState: any\n) => {\n  contentBlock.findEntityRanges((character: any) => {\n    const entityKey = character.getEntity();\n    return (\n      entityKey !== null && contentState.getEntity(entityKey).getType() === name\n    );\n  }, callback);\n};\n\nconst useEditorState = (props: IMUIRichTextEditorProps) => {\n  const decorators: DraftDecorator[] = [\n    {\n      strategy: findLinkEntities,\n      component: Link,\n    },\n  ];\n  if (props.decorators) {\n    props.decorators.forEach((deco) =>\n      decorators.push({\n        strategy: deco.name\n          ? (contentBlock: any, callback: any, contentState: any) => {\n              findDecoWithNameFromAutoComplete(\n                deco.name,\n                contentBlock,\n                callback,\n                contentState\n              );\n            }\n          : (contentBlock: any, callback: any) => {\n              findDecoWithRegex(deco.regex, contentBlock, callback);\n            },\n        component: deco.component,\n      })\n    );\n  }\n  const decorator = new CompositeDecorator(decorators);\n  let defaultValue: any;\n\n  if (props.defaultValueHtml) {\n    const contentHTML = convertFromHTML(props.defaultValueHtml);\n    const state = ContentState.createFromBlockArray(\n      contentHTML.contentBlocks,\n      contentHTML.entityMap\n    );\n    defaultValue = JSON.stringify(convertToRaw(state));\n  } else {\n    defaultValue = props.defaultValue || props.value;\n  }\n  return defaultValue\n    ? EditorState.createWithContent(\n        convertFromRaw(JSON.parse(defaultValue)),\n        decorator\n      )\n    : EditorState.createEmpty(decorator);\n};\n\nconst MUIRichTextEditor: RefForwardingComponent<\n  TMUIRichTextEditorRef,\n  IMUIRichTextEditorProps\n> = (props, ref) => {\n  const { classes, controls, customControls } = props;\n\n  const [state, setState] = useState<TMUIRichTextEditorState>({});\n  const [focus, setFocus] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedIndex, setSelectedIndex] = useState<number>(0);\n  const [editorState, setEditorState] = useState(() => useEditorState(props));\n  const [focusMediaKey, setFocusMediaKey] = useState(\"\");\n\n  const editorRef = useRef<Editor>(null);\n  const editorId = props.id || \"mui-rte\";\n  const toolbarPositionRef = useRef<TPosition | undefined>(undefined);\n  const editorStateRef = useRef<EditorState | null>(editorState);\n  const autocompleteRef = useRef<TAutocompleteStrategy | undefined>(undefined);\n  const autocompleteSelectionStateRef = useRef<SelectionState | undefined>(\n    undefined\n  );\n  const autocompletePositionRef = useRef<TPosition | undefined>(undefined);\n  const autocompleteLimit = props.autocomplete\n    ? props.autocomplete.suggestLimit || 5\n    : 5;\n  const isFirstFocus = useRef(true);\n  const customBlockMapRef = useRef<DraftBlockRenderMap | undefined>(undefined);\n  const customStyleMapRef = useRef<DraftStyleMap | undefined>(undefined);\n  const isFocusedWithMouse = useRef(false);\n  const selectionRef = useRef<TStateOffset>({\n    start: 0,\n    end: 0,\n  });\n\n  /**\n   * Exposed methods\n   */\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      handleFocus();\n    },\n    save: () => {\n      handleSave();\n    },\n    saveHtml: (options?: any) => {\n      handleSaveHtml(options);\n    },\n    insertAtomicBlock: (name: string, data: any) => {\n      handleInsertAtomicBlockSync(name, data);\n    },\n    insertAtomicBlockSync: (name: string, data: any) => {\n      handleInsertAtomicBlockSync(name, data);\n    },\n    insertAtomicBlockAsync: (\n      name: string,\n      promise: Promise<TAsyncAtomicBlockResponse>,\n      placeholder?: string\n    ) => {\n      handleInsertAtomicBlockAsync(name, promise, placeholder);\n    },\n  }));\n\n  useEffect(() => {\n    const editorState = useEditorState(props);\n    setEditorState(editorState);\n    toggleMouseUpListener(true);\n    return () => {\n      toggleMouseUpListener();\n    };\n  }, [props.value, props.defaultValue]);\n\n  useEffect(() => {\n    if (props.onChange) {\n      props.onChange(editorState);\n    }\n    editorStateRef.current = editorState;\n  }, [editorState]);\n\n  useEffect(() => {\n    toolbarPositionRef.current = state.toolbarPosition;\n  }, [state.toolbarPosition]);\n\n  useEffect(() => {\n    if (searchTerm.length < autocompleteMinSearchCharCount) {\n      setSelectedIndex(0);\n    }\n  }, [searchTerm]);\n\n  const clearSearch = () => {\n    setSearchTerm(\"\");\n    autocompletePositionRef.current = undefined;\n    autocompleteSelectionStateRef.current = undefined;\n  };\n\n  const handleMouseUp = (event: any) => {\n    const nodeName = event.target.nodeName;\n    clearSearch();\n    if (nodeName === \"IMG\" || nodeName === \"VIDEO\") {\n      return;\n    }\n    setTimeout(() => {\n      const selection = editorStateRef.current!.getSelection();\n      if (\n        selection.isCollapsed() ||\n        (toolbarPositionRef !== undefined &&\n          selectionRef.current.start === selection.getStartOffset() &&\n          selectionRef.current.end === selection.getEndOffset())\n      ) {\n        const selectionInfo = getSelectionInfo(editorStateRef.current!);\n        if (selectionInfo.entityType === \"IMAGE\") {\n          focusMedia(selectionInfo.block);\n          return;\n        }\n        setState({\n          ...state,\n          toolbarPosition: undefined,\n        });\n        return;\n      }\n\n      selectionRef.current = {\n        start: selection.getStartOffset(),\n        end: selection.getEndOffset(),\n      };\n\n      const editor: HTMLElement = (editorRef.current as any)?.editor;\n      if (!editor) {\n        return;\n      }\n      const { editorRect, selectionRect } = getEditorBounds(editor);\n      if (!selectionRect) {\n        return;\n      }\n      const position = {\n        top: editor.offsetTop - 48 + (selectionRect.top - editorRect.top),\n        left: editor.offsetLeft + (selectionRect.left - editorRect.left),\n      };\n      setState({\n        ...state,\n        toolbarPosition: position,\n      });\n    }, 1);\n  };\n\n  const findAutocompleteStrategy = (\n    chars: string\n  ): TAutocompleteStrategy | undefined => {\n    if (!props.autocomplete) {\n      return undefined;\n    }\n    const acArray = props.autocomplete.strategies.filter(\n      (ac) => ac.triggerChar === chars\n    );\n    if (acArray.length) {\n      return acArray[0];\n    }\n    return undefined;\n  };\n\n  const updateAutocompletePosition = () => {\n    const editor: HTMLElement = (editorRef.current as any)?.editor;\n    if (!editor) {\n      return;\n    }\n    const { editorRect, selectionRect } = getEditorBounds(editor);\n    const line = getLineNumber(editorState);\n    const top = selectionRect\n      ? selectionRect.top\n      : editorRect.top + lineHeight * line;\n    const left = selectionRect ? selectionRect.left : editorRect.left;\n    const position = {\n      top: editor.offsetTop + (top - editorRect.top) + lineHeight,\n      left: editor.offsetLeft + (left - editorRect.left),\n    };\n    if (!autocompleteSelectionStateRef.current) {\n      autocompleteSelectionStateRef.current = editorStateRef.current!.getSelection();\n    }\n    autocompletePositionRef.current = position;\n  };\n\n  const insertAutocompleteSuggestionAsAtomicBlock = (\n    name: string,\n    selection: SelectionState,\n    value: any\n  ) => {\n    const block = atomicBlockExists(name, props.customControls);\n    if (!block) {\n      return;\n    }\n    const contentState = Modifier.removeRange(\n      editorStateRef.current!.getCurrentContent(),\n      selection,\n      \"forward\"\n    );\n    const newEditorState = EditorState.push(\n      editorStateRef.current!,\n      contentState,\n      \"remove-range\"\n    );\n    // console.log(value);\n    const withAtomicBlock = insertAtomicBlock(\n      newEditorState,\n      name.toUpperCase(),\n      {\n        value: value,\n      },\n      {\n        selection: newEditorState.getCurrentContent().getSelectionAfter(),\n      }\n    );\n    handleChange(withAtomicBlock);\n  };\n\n  const insertAutocompleteSuggestionAsText = (\n    selection: SelectionState,\n    value: string\n  ) => {\n    const currentContentState = editorState.getCurrentContent();\n    const entityKey = currentContentState\n      .createEntity(\"AC_ITEM\", \"IMMUTABLE\")\n      .getLastCreatedEntityKey();\n    const contentState = Modifier.replaceText(\n      editorStateRef.current!.getCurrentContent(),\n      selection,\n      value,\n      editorStateRef.current!.getCurrentInlineStyle(),\n      entityKey\n    );\n    const newEditorState = EditorState.push(\n      editorStateRef.current!,\n      contentState,\n      \"insert-characters\"\n    );\n    if (autocompleteRef.current!.insertSpaceAfter === false) {\n      handleChange(newEditorState);\n    } else {\n      const addSpaceState = Modifier.insertText(\n        newEditorState.getCurrentContent(),\n        newEditorState.getSelection(),\n        \" \",\n        newEditorState.getCurrentInlineStyle()\n      );\n      handleChange(\n        EditorState.push(newEditorState, addSpaceState, \"insert-characters\")\n      );\n    }\n  };\n\n  const insertAutocompleteSuggestionUsingDecorator = (\n    name: string,\n    selection: SelectionState,\n    item: any\n  ) => {\n    //console.log(name, selection, item);\n    const currentContentState = editorState.getCurrentContent();\n    const entityKey = currentContentState\n      .createEntity(name, \"IMMUTABLE\", item.data)\n      .getLastCreatedEntityKey();\n    const contentState = Modifier.replaceText(\n      editorStateRef.current!.getCurrentContent(),\n      selection,\n      item.value,\n      editorStateRef.current!.getCurrentInlineStyle(),\n      entityKey\n    );\n\n    const newEditorState = EditorState.push(\n      editorStateRef.current!,\n      contentState,\n      \"insert-characters\"\n    );\n    if (autocompleteRef.current!.insertSpaceAfter === false) {\n      handleChange(newEditorState);\n    } else {\n      const addSpaceState = Modifier.insertText(\n        newEditorState.getCurrentContent(),\n        newEditorState.getSelection(),\n        \" \",\n        newEditorState.getCurrentInlineStyle()\n      );\n      handleChange(\n        EditorState.push(newEditorState, addSpaceState, \"insert-characters\")\n      );\n    }\n  };\n\n  const handleAutocompleteSelected = (index?: number) => {\n    const itemIndex = index || selectedIndex;\n    const items = getAutocompleteItems();\n    if (items.length > itemIndex) {\n      const item = items[itemIndex];\n      const currentSelection = autocompleteSelectionStateRef.current!;\n      const offset = currentSelection.getFocusOffset() + searchTerm.length + 1;\n      const newSelection = currentSelection.merge({\n        focusOffset: offset,\n      });\n      if (autocompleteRef.current!.atomicBlockName) {\n        const name = autocompleteRef.current!.atomicBlockName;\n        insertAutocompleteSuggestionAsAtomicBlock(\n          name,\n          newSelection as SelectionState,\n          item.value\n        );\n      } else if (autocompleteRef.current!.decoratorName) {\n        insertAutocompleteSuggestionUsingDecorator(\n          autocompleteRef.current!.decoratorName,\n          newSelection as SelectionState,\n          item // send the entire item, so it's data can also be set in the entity\n        );\n      } else {\n        insertAutocompleteSuggestionAsText(\n          newSelection as SelectionState,\n          item.value\n        );\n      }\n    }\n    handleAutocompleteClosed();\n  };\n\n  const handleAutocompleteClosed = () => {\n    clearSearch();\n    setSelectedIndex(0);\n    refocus();\n  };\n\n  const getAutocompleteItems = (): TAutocompleteItem[] => {\n    if (searchTerm.length < autocompleteMinSearchCharCount) {\n      return [];\n    }\n\n    if (props.autocompleteItemsGenerator)\n      return props.autocompleteItemsGenerator(\n        searchTerm,\n        autocompleteRef.current?.triggerChar\n      );\n\n    return autocompleteRef\n      .current!.items.filter(\n        (item) => item.keys.filter((key) => key.includes(searchTerm)).length > 0\n      )\n      .splice(0, autocompleteLimit);\n  };\n\n  const handleChange = (state: EditorState) => {\n    setEditorState(state);\n  };\n\n  const handleBeforeInput = (\n    chars: string,\n    editorState: EditorState\n  ): DraftHandleValue => {\n    if (chars === \" \" && searchTerm.length) {\n      clearSearch();\n    } else if (autocompleteSelectionStateRef.current) {\n      setSearchTerm(searchTerm + chars);\n    } else {\n      const strategy = findAutocompleteStrategy(chars);\n      if (strategy) {\n        autocompleteRef.current = strategy;\n        updateAutocompletePosition();\n      }\n    }\n    return isMaxLengthHandled(editorState, 1);\n  };\n\n  const handleEditorFocus = () => {\n    handleFocus();\n    if (isFocusedWithMouse.current === true) {\n      isFocusedWithMouse.current = false;\n      return;\n    }\n    const nextEditorState = EditorState.forceSelection(\n      editorState,\n      editorState.getSelection()\n    );\n    setTimeout(\n      () => setEditorState(EditorState.moveFocusToEnd(nextEditorState)),\n      0\n    );\n  };\n\n  const handlePlaceholderFocus = () => {\n    if (isFirstFocus.current === false) {\n      focusEditor();\n      return;\n    }\n    handleFocus();\n    isFirstFocus.current = false;\n  };\n\n  const handleFocus = () => {\n    focusEditor();\n    if (props.onFocus) {\n      props.onFocus();\n    }\n  };\n\n  const focusEditor = () => {\n    setFocus(true);\n    setTimeout(() => editorRef.current?.focus(), 0);\n  };\n\n  const handleBlur = () => {\n    isFocusedWithMouse.current = false;\n    setFocus(false);\n    if (props.onBlur) {\n      props.onBlur();\n    }\n\n    if (!state.anchorUrlPopover) {\n      setState({\n        ...state,\n        toolbarPosition: undefined,\n      });\n    }\n  };\n\n  const handleMouseDown = () => {\n    isFocusedWithMouse.current = true;\n  };\n\n  const handleClearFormat = () => {\n    if (customStyleMapRef.current === undefined) {\n      return;\n    }\n    const withoutStyles = clearInlineStyles(\n      editorState,\n      customStyleMapRef.current\n    );\n    const selectionInfo = getSelectionInfo(editorState);\n    const newEditorState = EditorState.push(\n      editorState,\n      withoutStyles,\n      \"change-inline-style\"\n    );\n    setEditorState(\n      RichUtils.toggleBlockType(newEditorState, selectionInfo.blockType)\n    );\n  };\n\n  const handleSave = () => {\n    if (props.onSave) {\n      props.onSave(\n        JSON.stringify(convertToRaw(editorState.getCurrentContent()))\n      );\n    }\n  };\n\n  const handleSaveHtml = (options?: any) => {\n    if (props.onSaveHtml) {\n      props.onSaveHtml(stateToHTML(editorState.getCurrentContent(), options));\n    }\n  };\n\n  const handleInsertAtomicBlockSync = (name: string, data: any) => {\n    const block = atomicBlockExists(name, props.customControls);\n    if (!block) {\n      return;\n    }\n    const newEditorState = insertAtomicBlock(\n      editorState,\n      block.name.toUpperCase(),\n      data,\n      {\n        selection: editorState.getCurrentContent().getSelectionAfter(),\n      }\n    );\n    updateStateForPopover(newEditorState);\n  };\n\n  const handleInsertAtomicBlockAsync = (\n    name: string,\n    promise: Promise<TAsyncAtomicBlockResponse>,\n    placeholder?: string\n  ) => {\n    const selection = insertAsyncAtomicBlockPlaceholder(name, placeholder);\n    const offset = selection.getFocusOffset() + 1;\n    const newSelection = selection.merge({\n      focusOffset: offset,\n    });\n\n    promise\n      .then((response) => {\n        const newEditorState = insertAtomicBlock(\n          editorStateRef.current!,\n          name,\n          response.data,\n          {\n            selection: newSelection,\n          }\n        );\n        handleChange(newEditorState);\n      })\n      .catch((error) => {\n        if (error) {\n          return;\n        }\n        const newContentState = Modifier.removeRange(\n          editorStateRef.current!.getCurrentContent(),\n          newSelection as SelectionState,\n          \"forward\"\n        );\n        handleChange(\n          EditorState.push(\n            editorStateRef.current!,\n            newContentState,\n            \"remove-range\"\n          )\n        );\n      });\n  };\n\n  const insertAsyncAtomicBlockPlaceholder = (\n    name: string,\n    placeholder?: string\n  ): SelectionState => {\n    const placeholderName = placeholder || name + \"...\";\n    const currentContentState = editorStateRef.current!.getCurrentContent();\n    const entityKey = currentContentState\n      .createEntity(\"ASYNC_ATOMICBLOCK\", \"IMMUTABLE\")\n      .getLastCreatedEntityKey();\n    const contentState = Modifier.insertText(\n      editorStateRef.current!.getCurrentContent(),\n      currentContentState.getSelectionAfter(),\n      placeholderName,\n      undefined,\n      entityKey\n    );\n\n    const selection = currentContentState.getSelectionAfter();\n    const newEditorState = EditorState.push(\n      editorStateRef.current!,\n      contentState,\n      \"insert-characters\"\n    );\n    handleChange(newEditorState);\n    return selection;\n  };\n\n  const handleKeyCommand = (\n    command: DraftEditorCommand | string,\n    editorState: EditorState\n  ): DraftHandleValue => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      handleChange(newState);\n      return \"handled\";\n    } else {\n      if (command.includes(\"mui-autocomplete\")) {\n        if (command === \"mui-autocomplete-insert\") {\n          handleAutocompleteSelected();\n        }\n        if (command === \"mui-autocomplete-end\") {\n          handleAutocompleteClosed();\n        }\n        return \"handled\";\n      }\n      if (props.keyCommands) {\n        const keyCommand = props.keyCommands.find(\n          (comm) => comm.name === command\n        );\n        if (keyCommand) {\n          const newState = keyCommand.callback(editorState);\n          handleChange(newState);\n          return \"handled\";\n        }\n      }\n    }\n    return \"not-handled\";\n  };\n\n  const handleCustomClick = (style: any, id: string) => {\n    if (!props.customControls) {\n      return;\n    }\n    for (let control of props.customControls) {\n      if (control.name.toUpperCase() === style) {\n        if (control.onClick) {\n          setTimeout(() => editorRef.current?.blur(), 0);\n          const newState = control.onClick(\n            editorState,\n            control.name,\n            document.getElementById(id)\n          );\n          if (newState) {\n            if (newState.getSelection().isCollapsed()) {\n              setEditorState(newState);\n            } else {\n              updateStateForPopover(newState);\n            }\n          } else {\n            if (!editorState.getSelection().isCollapsed()) {\n              refocus();\n            }\n          }\n        }\n        break;\n      }\n    }\n  };\n\n  const handleUndo = () => {\n    setEditorState(EditorState.undo(editorState));\n  };\n\n  const handleRedo = () => {\n    setEditorState(EditorState.redo(editorState));\n  };\n\n  const handlePrompt = (\n    lastState: EditorState,\n    type: \"link\" | \"media\",\n    inlineMode?: boolean\n  ) => {\n    const selectionInfo = getSelectionInfo(lastState);\n    const contentState = lastState.getCurrentContent();\n    const linkKey = selectionInfo.linkKey;\n    let data = undefined;\n    if (linkKey) {\n      const linkInstance = contentState.getEntity(linkKey);\n      data = linkInstance.getData();\n    }\n    setState({\n      urlData: data,\n      urlKey: linkKey,\n      toolbarPosition: !inlineMode ? undefined : state.toolbarPosition,\n      anchorUrlPopover: !inlineMode\n        ? document.getElementById(`${editorId}-${type}-control-button`)!\n        : document.getElementById(\n            `${editorId}-${type}-control-button-toolbar`\n          )!,\n      urlIsMedia: type === \"media\" ? true : undefined,\n    });\n  };\n\n  const handlePromptForLink = (inlineMode?: boolean) => {\n    const selection = editorState.getSelection();\n\n    if (!selection.isCollapsed()) {\n      handlePrompt(editorState, \"link\", inlineMode);\n    }\n  };\n\n  const handlePromptForMedia = (\n    inlineMode?: boolean,\n    newState?: EditorState\n  ) => {\n    const lastState = newState || editorState;\n    handlePrompt(lastState, \"media\", inlineMode);\n  };\n\n  const handleConfirmPrompt = (isMedia?: boolean, ...args: any) => {\n    if (isMedia) {\n      confirmMedia(...args);\n      return;\n    }\n    confirmLink(...args);\n  };\n\n  const handleToolbarClick = (\n    style: string,\n    type: string,\n    id: string,\n    inlineMode?: boolean\n  ) => {\n    if (type === \"inline\") {\n      return toggleInlineStyle(style);\n    }\n    if (type === \"block\") {\n      return toggleBlockType(style);\n    }\n    switch (style) {\n      case \"UNDO\":\n        handleUndo();\n        break;\n      case \"REDO\":\n        handleRedo();\n        break;\n      case \"LINK\":\n        handlePromptForLink(inlineMode);\n        break;\n      case \"IMAGE\":\n        handlePromptForMedia(inlineMode);\n        break;\n      case \"clear\":\n        handleClearFormat();\n        break;\n      case \"save\":\n        handleSave();\n        break;\n      default:\n        handleCustomClick(style, id);\n    }\n  };\n\n  const handlePastedText = (\n    text: string,\n    _html: string | undefined,\n    editorState: EditorState\n  ): DraftHandleValue => {\n    return isMaxLengthHandled(editorState, text.length);\n  };\n\n  const handleReturn = (\n    _e: any,\n    editorState: EditorState\n  ): DraftHandleValue => {\n    return isMaxLengthHandled(editorState, 1);\n  };\n\n  const isMaxLengthHandled = (\n    editorState: EditorState,\n    nextLength: number\n  ): DraftHandleValue => {\n    const currentLength = editorState.getCurrentContent().getPlainText(\"\")\n      .length;\n    return isGreaterThan(currentLength + nextLength, props.maxLength)\n      ? \"handled\"\n      : \"not-handled\";\n  };\n\n  const toggleMouseUpListener = (addAfter = false) => {\n    const editor: HTMLElement = (editorRef.current as any)?.editor;\n    if (!editor) {\n      return;\n    }\n    editor.removeEventListener(\"mouseup\", handleMouseUp);\n    if (addAfter) {\n      editor.addEventListener(\"mouseup\", handleMouseUp);\n    }\n  };\n\n  const removeLink = () => {\n    const selection = editorState.getSelection();\n    setEditorState(RichUtils.toggleLink(editorState, selection, null));\n  };\n\n  const confirmLink = (url?: string) => {\n    const { urlKey } = state;\n    if (!url) {\n      if (urlKey) {\n        removeLink();\n      }\n      dismissPopover();\n      return;\n    }\n\n    const contentState = editorState.getCurrentContent();\n    let replaceEditorState = editorState;\n    const data = {\n      url: url,\n      className: classes.anchorLink,\n    };\n\n    if (urlKey) {\n      contentState.replaceEntityData(urlKey, data);\n      replaceEditorState = EditorState.push(\n        editorState,\n        contentState,\n        \"apply-entity\"\n      );\n    } else {\n      const contentStateWithEntity = contentState.createEntity(\n        \"LINK\",\n        \"MUTABLE\",\n        data\n      );\n      const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n      const newEditorState = EditorState.set(editorState, {\n        currentContent: contentStateWithEntity,\n      });\n      replaceEditorState = RichUtils.toggleLink(\n        newEditorState,\n        newEditorState.getSelection(),\n        entityKey\n      );\n    }\n    updateStateForPopover(replaceEditorState);\n  };\n\n  const removeMedia = () => {\n    const blockKey = editorState.getSelection().getStartKey();\n    const contentState = editorState.getCurrentContent();\n    const mediaBlock = contentState.getBlockForKey(blockKey);\n    const newContentState = removeBlockFromMap(editorState, mediaBlock);\n    const newEditorState = EditorState.push(\n      editorState,\n      newContentState,\n      \"remove-range\"\n    );\n    setEditorState(newEditorState);\n  };\n\n  const confirmMedia = (\n    url?: string,\n    width?: number,\n    height?: number,\n    alignment?: TAlignment,\n    type?: TMediaType\n  ) => {\n    const { urlKey } = state;\n    if (!url) {\n      if (urlKey) {\n        removeMedia();\n      }\n      dismissPopover();\n      return;\n    }\n\n    const contentState = editorState.getCurrentContent();\n    const data = {\n      url: url,\n      width: width,\n      height: height,\n      alignment: alignment,\n      type: type,\n    };\n\n    if (urlKey) {\n      contentState.replaceEntityData(urlKey, data);\n      const newEditorState = EditorState.push(\n        editorState,\n        contentState,\n        \"apply-entity\"\n      );\n      updateStateForPopover(\n        EditorState.forceSelection(\n          newEditorState,\n          newEditorState.getCurrentContent().getSelectionAfter()\n        )\n      );\n    } else {\n      const newEditorState = insertAtomicBlock(editorState, \"IMAGE\", data);\n      updateStateForPopover(\n        EditorState.forceSelection(\n          newEditorState,\n          newEditorState.getCurrentContent().getSelectionAfter()\n        )\n      );\n    }\n    setFocusMediaKey(\"\");\n  };\n\n  const updateStateForPopover = (editorState: EditorState) => {\n    setEditorState(editorState);\n    dismissPopover();\n  };\n\n  const dismissPopover = () => {\n    refocus();\n    setState({\n      ...state,\n      anchorUrlPopover: undefined,\n      urlKey: undefined,\n      urlIsMedia: undefined,\n      urlData: undefined,\n    });\n  };\n\n  const refocus = () => {\n    setTimeout(() => editorRef.current?.blur(), 0);\n    setTimeout(() => editorRef.current?.focus(), 1);\n  };\n\n  const toggleBlockType = (blockType: string) => {\n    setEditorState(RichUtils.toggleBlockType(editorState, blockType));\n  };\n\n  const toggleInlineStyle = (inlineStyle: string) => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, inlineStyle));\n  };\n\n  const focusMedia = (block: ContentBlock) => {\n    const newSeletion = SelectionState.createEmpty(block.getKey());\n    const newEditorState = EditorState.forceSelection(\n      editorStateRef.current!,\n      newSeletion\n    );\n    editorStateRef.current = newEditorState;\n    setFocusMediaKey(block.getKey());\n    setEditorState(newEditorState);\n    handlePromptForMedia(false, newEditorState);\n  };\n\n  const getStyleMap = (): DraftStyleMap => {\n    if (customStyleMapRef.current === undefined) {\n      setupStyleMap();\n    }\n    return customStyleMapRef.current!;\n  };\n\n  const setupStyleMap = () => {\n    const customStyleMap = JSON.parse(JSON.stringify(styleRenderMap));\n    props.customControls\n      ?.filter((control) => control.type === \"inline\" && control.inlineStyle)\n      .forEach((control) => {\n        customStyleMap[control.name.toUpperCase()] = control.inlineStyle;\n      });\n    customStyleMapRef.current = customStyleMap;\n  };\n\n  const getBlockMap = (): DraftBlockRenderMap => {\n    if (customBlockMapRef.current === undefined) {\n      setupBlockMap();\n    }\n    return customBlockMapRef.current!;\n  };\n\n  const setupBlockMap = () => {\n    const customBlockMap: any = {};\n    props.customControls\n      ?.filter((control) => control.type === \"block\" && control.blockWrapper)\n      .forEach((control) => {\n        customBlockMap[control.name.toUpperCase()] = {\n          element: \"div\",\n          wrapper: control.blockWrapper,\n        };\n      });\n    customBlockMapRef.current = DefaultDraftBlockRenderMap.merge(\n      blockRenderMap,\n      Immutable.Map(customBlockMap)\n    );\n  };\n\n  const blockRenderer = (contentBlock: ContentBlock) => {\n    const blockType = contentBlock.getType();\n    if (blockType === \"atomic\") {\n      const contentState = editorState.getCurrentContent();\n      const entity = contentBlock.getEntityAt(0);\n      if (entity) {\n        const type = contentState.getEntity(entity).getType();\n        if (type === \"IMAGE\") {\n          return {\n            component: Media,\n            editable: false,\n            props: {\n              onClick: focusMedia,\n              readOnly: props.readOnly,\n              focusKey: focusMediaKey,\n            },\n          };\n        } else {\n          const block = atomicBlockExists(\n            type.toLowerCase(),\n            props.customControls\n          );\n          if (block) {\n            return {\n              component: block.atomicComponent,\n              editable: false,\n              props: contentState\n                .getEntity(contentBlock.getEntityAt(0))\n                .getData(),\n            };\n          }\n        }\n      }\n    }\n    return null;\n  };\n\n  const styleRenderer = (style: any): React.CSSProperties => {\n    const customStyleMap = getStyleMap();\n    const styleNames = style.toJS();\n    return styleNames.reduce((styles: any, styleName: string) => {\n      styles = customStyleMap[styleName];\n      return styles;\n    }, {});\n  };\n\n  const insertAtomicBlock = (\n    editorState: EditorState,\n    type: string,\n    data: any,\n    options?: any\n  ) => {\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      type,\n      \"IMMUTABLE\",\n      data\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    const newEditorStateRaw = EditorState.set(editorState, {\n      currentContent: contentStateWithEntity,\n      ...options,\n    });\n    return AtomicBlockUtils.insertAtomicBlock(\n      newEditorStateRaw,\n      entityKey,\n      \" \"\n    );\n  };\n\n  const getAutocompleteKeyEvent = (\n    keyboardEvent: React.KeyboardEvent<{}>\n  ): string | null => {\n    const itemsLength = getAutocompleteItems().length;\n    const limit =\n      autocompleteLimit > itemsLength ? itemsLength : autocompleteLimit;\n    switch (keyboardEvent.key) {\n      case \"ArrowDown\":\n        if (\n          (selectedIndex === 0 && itemsLength === 1) ||\n          selectedIndex + 1 === limit\n        ) {\n          setSelectedIndex(0);\n        } else {\n          setSelectedIndex(\n            selectedIndex + 1 < limit ? selectedIndex + 1 : selectedIndex\n          );\n        }\n        return \"mui-autocomplete-navigate\";\n      case \"ArrowUp\":\n        if (selectedIndex) {\n          setSelectedIndex(selectedIndex - 1);\n        } else {\n          setSelectedIndex(limit - 1);\n        }\n        return \"mui-autocomplete-navigate\";\n      case \"Enter\":\n        return \"mui-autocomplete-insert\";\n      case \"Escape\":\n        return \"mui-autocomplete-end\";\n      default:\n        return null;\n    }\n  };\n\n  const updateSearchTermForKeyBinding = (\n    keyBinding: DraftEditorCommand | null\n  ) => {\n    const text = editorStateRef\n      .current!.getCurrentContent()\n      .getLastBlock()\n      .getText();\n\n    if (\n      keyBinding === \"backspace\" &&\n      autocompleteRef.current &&\n      text.substr(text.length - 1) === autocompleteRef.current.triggerChar\n    ) {\n      clearSearch();\n    } else if (\n      autocompletePositionRef.current &&\n      keyBinding === \"backspace\" &&\n      searchTerm.length\n    ) {\n      setSearchTerm(searchTerm.substr(0, searchTerm.length - 1));\n    } else if (\n      !autocompletePositionRef.current &&\n      (keyBinding === \"backspace\" || keyBinding === \"split-block\")\n    ) {\n      clearSearch();\n    }\n  };\n\n  const keyBindingFn = (e: React.KeyboardEvent<{}>): string | null => {\n    if (hasCommandModifier(e) && props.keyCommands) {\n      const comm = props.keyCommands.find((comm) => comm.key === e.keyCode);\n      if (comm) {\n        return comm.name;\n      }\n    }\n    if (searchTerm) {\n      const autocompleteEvent = getAutocompleteKeyEvent(e);\n      if (autocompleteEvent) {\n        return autocompleteEvent;\n      }\n    }\n    const keyBinding = getDefaultKeyBinding(e);\n    updateSearchTermForKeyBinding(keyBinding);\n\n    return keyBinding;\n  };\n\n  const renderToolbar = props.toolbar === undefined || props.toolbar;\n  const inlineToolbarControls =\n    props.inlineToolbarControls || defaultInlineToolbarControls;\n  const editable = props.readOnly === undefined || !props.readOnly;\n  let className = \"\";\n  let placeholder: React.ReactElement | null = null;\n  if (!focus) {\n    const contentState = editorState.getCurrentContent();\n    if (!contentState.hasText()) {\n      placeholder = (\n        <div\n          className={classNames(classes.editorContainer, classes.placeHolder, {\n            [classes.error]: props.error,\n          })}\n          tabIndex={0}\n          onFocus={handlePlaceholderFocus}\n        >\n          {props.label || \"\"}\n        </div>\n      );\n      className = classes.hidePlaceholder;\n    }\n  }\n\n  return (\n    <div id={`${editorId}-root`} className={classes.root}>\n      <div\n        id={`${editorId}-container`}\n        className={classNames(classes.container, {\n          [classes.inheritFontSize]: props.inheritFontSize,\n        })}\n      >\n        {props.autocomplete && autocompletePositionRef.current ? (\n          <Autocomplete\n            items={getAutocompleteItems()}\n            top={autocompletePositionRef.current!.top}\n            left={autocompletePositionRef.current!.left}\n            onClick={handleAutocompleteSelected}\n            selectedIndex={selectedIndex}\n          />\n        ) : null}\n        {props.inlineToolbar && editable && state.toolbarPosition ? (\n          <Paper\n            className={classes.inlineToolbar}\n            style={{\n              top: state.toolbarPosition.top,\n              left: state.toolbarPosition.left,\n            }}\n          >\n            <Toolbar\n              id={editorId}\n              editorState={editorState}\n              onClick={handleToolbarClick}\n              controls={inlineToolbarControls}\n              customControls={customControls}\n              inlineMode={true}\n              isActive={true}\n            />\n          </Paper>\n        ) : null}\n        {renderToolbar ? (\n          <Toolbar\n            id={editorId}\n            editorState={editorState}\n            onClick={handleToolbarClick}\n            controls={controls}\n            customControls={customControls}\n            className={classes.toolbar}\n            disabled={!editable}\n            size={props.toolbarButtonSize}\n            isActive={focus}\n          />\n        ) : null}\n        {placeholder}\n        <div id={`${editorId}-editor`} className={classes.editor}>\n          <div\n            id={`${editorId}-editor-container`}\n            className={classNames(className, classes.editorContainer, {\n              [classes.editorReadOnly]: !editable,\n              [classes.error]: props.error,\n            })}\n            onMouseDown={handleMouseDown}\n            onBlur={handleBlur}\n          >\n            <Editor\n              blockRenderMap={getBlockMap()}\n              blockRendererFn={blockRenderer}\n              customStyleFn={styleRenderer}\n              editorState={editorState}\n              onChange={handleChange}\n              onFocus={handleEditorFocus}\n              readOnly={props.readOnly}\n              handleKeyCommand={handleKeyCommand}\n              handleBeforeInput={handleBeforeInput}\n              handlePastedText={handlePastedText}\n              handleReturn={handleReturn}\n              keyBindingFn={keyBindingFn}\n              ref={editorRef}\n              {...props.draftEditorProps}\n            />\n          </div>\n        </div>\n\n        {props.floatingToolbar &&\n        props.floatingToolbarPosition &&\n        props.floatingToolbarControls &&\n        editable ? (\n          <Paper\n            className={classes.floatingToolbar}\n            style={props.floatingToolbarPosition}\n          >\n            <Toolbar\n              id={editorId}\n              editorState={editorState}\n              onClick={handleToolbarClick}\n              controls={props.floatingToolbarControls}\n              customControls={customControls}\n              size={props.toolbarButtonSize}\n              isActive={true}\n            />\n          </Paper>\n        ) : null}\n\n        {state.anchorUrlPopover ? (\n          <UrlPopover\n            data={state.urlData}\n            anchor={state.anchorUrlPopover}\n            onConfirm={handleConfirmPrompt}\n            isMedia={state.urlIsMedia}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles, {\n  withTheme: true,\n  name: \"MUIRichTextEditor\",\n})(forwardRef(MUIRichTextEditor));\n"],"names":["React","Modifier","SelectionState","getVisibleSelectionRect","useState","useEffect","createStyles","withStyles","styles","Blockquote","CodeBlock","KeyBindingUtil","CompositeDecorator","convertFromHTML","ContentState","convertToRaw","EditorState","convertFromRaw","useRef","useImperativeHandle","RichUtils","stateToHTML","DefaultDraftBlockRenderMap","Media","AtomicBlockUtils","getDefaultKeyBinding","Autocomplete","Editor","UrlPopover","forwardRef"],"mappings":"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"}